plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.bookshop01'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
   	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	
	
	 implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    
    // 파일 업로드 (commons-fileupload)
    implementation 'commons-fileupload:commons-fileupload:1.4'
    
    //썸네일
    implementation 'net.coobird:thumbnailator:0.4.20'
    
       // AOP 기능 (AspectJ)
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    
    // json-lib core
    implementation 'net.sf.json-lib:json-lib:2.4:jdk15'

    // json-lib의 의존성
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'commons-logging:commons-logging:1.2'
    implementation 'net.sf.ezmorph:ezmorph:1.0.6'
    
    
     // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    
      // 기타 필요한 의존성
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0' // 최신 servlet API
    
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	compileOnly 'javax.servlet:javax.servlet-api:4.0.1'  // 또는 필요한 버전
	
	implementation 'org.projectlombok:lombok'
    testImplementation('org.projectlombok:lombok') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}
